import{L as t,c as e,h as o}from"./lit-element-ab8a46b6.js";window.customElements.define("pandora-status-bar",class extends t{static get styles(){return e`.container{width:80%;height:80%;margin:auto;text-align:center}.bar{border:2px solid #000;background-color:transparent;margin:auto;position:relative}.bar .filled{z-index:-1;position:absolute;background-color:orange}.states{display:flex;justify-content:space-around;position:absolute}.state{border:3px solid #000;background-color:#fff;width:23px;height:23px;border-radius:50%;z-index:1;box-sizing:border-box;position:relative}.state:focus{outline:0;outline-offset:4px}.completed{background-color:#ff8c00}.invisible{border:0;background-color:transparent;position:absolute;margin-left:-11.5px;border-radius:50%;margin-top:-3px;height:23px;width:23px;cursor:pointer}.invisible:focus + .bubble{display:block}.invisible:focus{border:3px solid #000;outline:0;z-index:2;transition:background-color ease .5s}.bubble:hover{display:block}.bubble{border-radius:1em;display:none;width:max-content;position:relative;padding:5px 30px 10px 30px;max-width:20em;min-width:3em;cursor:auto;text-align:left;box-shadow:10px 10px 15px grey;top:50%;left:30px;transform:translateY(-50%)}.bubble h3{text-align:center}`}static get properties(){return{title:{type:String},vertical:{type:Boolean},arrow:{type:Boolean},halfway:{type:Boolean},status:{type:Object},completedstatecolor:{type:String},barcolor:{type:String},focusedstatecolor:{type:String},textcolor:{type:String}}}constructor(){super(),this.title="",this.vertical=!1,this.halfway=!0,this.completedstatecolor="orange",this.barcolor="#bd0",this.focusedstatecolor="#880",this.arrow=!0,this.textcolor="black",this.bubblescolor="#bd0"}render(){return o`<style>.body{max-height:${this.maxheight};overflow:auto}.invisible:focus{background-color:${this.focusedstatecolor}}.right:after{content:'';position:absolute;border:solid;border-color:transparent transparent transparent ${this.barcolor};border-width:5px 0 5px 9px;left:100%;top:0}.down::after{content:'';position:relative;border:solid;border-width:9px 5px 0 5px;border-color:${this.barcolor} transparent transparent transparent;left:0;top:calc(100% + 8px)}.bubble{background:${this.bubblescolor};color:${this.textcolor}}.bubble:before{content:'';position:absolute;top:0;left:50%;width:0;height:0;border:10px solid transparent;margin-left:-10px;margin-top:-10px}.triangle-top::before{left:calc(50% + 5px);top:0;border-width:0 5px 10px 5px;border-color:transparent transparent ${this.bubblescolor} transparent}.triangle-left::before{top:calc(50% + 5px);left:0;border-width:5px 10px 5px 0;border-color:transparent ${this.bubblescolor} transparent transparent}</style><div class="container"><h2>${this.title}</h2><div class="bar">${this.getFilled()}<div class="states">${this.status.map(t=>o`<div class="state ${t.completed?"completed":""}"><input type="button" class="invisible"><div class="bubble ${this.vertical?"triangle-left":"triangle-top"}" style="${this.vertical?"":"top: 30px; left: 50%; transform: translateX(-50%);"}"><h3>${t.title}</h3><p>${t.text}</p></div></div>`)}</div></div></div>`}getFilled(){let t=o``;return t=this.arrow?this.vertical?o`<div class="filled down"></div>`:o`<div class="filled right"></div>`:o`<div class="filled"></div>`}updated(){this.updateBar(),this.updateStates()}updateBar(){const t=this.shadowRoot.querySelector(".bar"),e=this.shadowRoot.querySelector(".filled");this.vertical?(t.style.height=`${50*(this.status.length+1)}px`,t.style.width="9px",e.style.width="9px",e.style.height=this.getFilledWidth(),e.style.transition="height 2s ease"):(t.style.height="9px",t.style.width="100%",e.style.width=this.getFilledWidth(),e.style.height="9px",e.style.transition="width 2s ease"),e.style.background=this.barcolor,this.getFilledWidth()}getFilledWidth(){let t;const e=this.status.filter(t=>!0===t.completed).length;if(0===e)t=`${100/(2*this.status.length)/2}%`;else if(e===this.status.length)t="100%",this.arrow=!1;else{const o=100/(2*this.status.length);let r=o+2*o*(e-1);this.halfway&&(r+=o),t=`calc(${r}% - 10px)`}return t}updateStates(){const t=this.shadowRoot.querySelector(".states");this.shadowRoot.querySelectorAll(".completed").forEach(t=>{t.style.background=this.completedstatecolor}),this.vertical?(t.style.flexDirection="column",t.style.height="100%",t.style.left="-7px"):(t.style.flexDirection="row",t.style.width="100%",t.style.top="-7px")}});
//# sourceMappingURL=pandora-status-bar.js.map
