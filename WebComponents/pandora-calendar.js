import{L as t,c as e,h as r}from"./lit-element-ab8a46b6.js";window.customElements.define("pandora-calendar",class extends t{static get styles(){return e`.container{width:100%;box-sizing:border-box}.button:focus + .bubble{display:block}.bubble:hover{display:block}.button{background-color:transparent;border:0;position:absolute;width:4vw;height:4vw;margin-left:-3vw;margin-top:-1vw;border-radius:50%;cursor:pointer}.bubble{position:relative;color:#fff;font-family:Arial;font-size:17px;line-height:100px;box-shadow:5px 5px 10px 1px #333;text-align:center;cursor:default;border-radius:0 23px 23px 23px;padding:0;z-index:1;margin-left:2vw;margin-top:24px;display:none;margin-top:1.2vw;font-size:.75em;color:#000;min-width:6vw;min-height:6vw;max-width:35vw;width:max-content;opacity:1}.bubble-text{line-height:initial;padding:2vw}.bubble:before{content:' ';position:absolute;display:block;border-style:solid;border-width:16px 5vw 16px 1vw;top:-16px}.bubble:after{content:' ';position:absolute;display:block;z-index:1;border-style:solid;border-color:transparent;border-width:2.5vw;top:-60px}.highlighted{border:2px solid #333;border-radius:50%;cursor:pointer}.header{width:100%;padding:2% 0 2% 0;background-color:#333;display:flex;flex-wrap:nowrap;text-align:center;align-items:center;justify-content:center;border-top:1px solid #000;border-left:1px solid #000;border-right:1px solid #000;font-size:2.5vw}.arrow{padding:5px;cursor:pointer;font-size:1.3em;width:100%;height:100%;margin-left:10%;margin-right:10%;border-radius:50%;border:1px solid transparent}.year-block{margin:0 2% 0 2%}.year{font-size:1.3em}.month{font-size:1.1em}.weekday-container{display:flex;flex-wrap:nowrap;width:98%;border-right:1px solid #000;border-left:1px solid #000;padding-left:2%;font-size:2vw}.weekday{width:14%;text-align:center;padding-top:1.5%;padding-bottom:1.5%}.body{display:flex;flex-wrap:wrap;margin:auto;width:98%;border:1px solid #000;border-top:0;padding-left:2%;padding-bottom:1%;padding-top:1%}.daybox{width:10%;text-align:center;padding-left:2%;padding-right:2%;padding-bottom:1%}.day{margin:auto;height:2vw;font-size:2vw;padding-bottom:1vw;padding-top:1vw}.transparency{opacity:.5}.text{padding-bottom:3px;margin:auto}.mobile{display:none}@media (max-width: 480px){.arrow{width:fit-content;margin:0;padding:0;padding-left:5%;text-align:left}.rotated{display:none}.mobile{display:block;text-align:right;padding:0;padding-right:5%}.header{flex-wrap:wrap}.year-block{width:100%}}`}static get properties(){return{arrowLeft:{type:String},arrowRight:{type:String},bubblecolor:{type:String},bubblesecondarycolor:{type:String},bubbletextcolor:{type:String},_currentDate:{type:Date},dates:{type:Array},daysbackgroundcolor:{type:String},dayscolor:{type:String},defaultDate:{type:String},headerbackgroundcolor:{type:String},headertextcolor:{type:String},highlighteddaycolor:{type:String},weekdaysbackgroundcolor:{type:String},weekdaystextcolor:{type:String},weekdaysvalues:{type:String},weekstart:{type:Number},_st:{type:String}}}constructor(){super(),this.dates=[],this.arrowLeft="ðŸ¡„",this.arrowRight="ðŸ¡†",this.bubblecolor="#333",this.bubbletextcolor="#fff",this.daysbackgroundcolor="white",this.dayscolor="#000",this.headerbackgroundcolor="#333",this.headertextcolor="white",this.highlighteddaycolor="#ccc",this.weekdaysbackgroundcolor="#ccc",this.weekdaysvalues="narrow",this.weekdaystextcolor="#000",this.weekstart=1,this._currentDate=new Date}render(){return r`${this._st}<div class="container"><div class="header"><div data-slide="${-1}" @click="${this.changeMonth}" class="arrow rotated desktop"></div><div class="year-block"><div class="year">${this._currentDate.getFullYear()}</div><div class="month">${this.getMonth()}</div></div><div data-slide="${1}" @click="${this.changeMonth}" class="arrow rotated mobile"></div><div data-slide="${1}" @click="${this.changeMonth}" class="arrow"></div></div><div class="weekday-container">${this.getWeekdays().map(t=>r`<div class="weekday">${t}</div>`)}</div><div class="body">${this.getBody()}</div></div>`}firstUpdated(){this.updateDefaultDate()}updateDefaultDate(){this.defaultDate?this._currentDate=new Date(parseInt(this.defaultDate,10)):this._currentDate=new Date}updated(t){t.forEach((t,e)=>{["_currentDate"].includes(e)?(this._currentDate.setDate(1),this.updateBubbles()):["defaultDate"].includes(e)?this.updateDefaultDate():["headerbackgroundcolor"].includes(e)?this.shadowRoot.querySelector(".header").style.background=this.headerbackgroundcolor:["headertextcolor"].includes(e)?this.shadowRoot.querySelector(".header").style.color=this.headertextcolor:["weekdaystextcolor"].includes(e)?this.shadowRoot.querySelector(".weekday-container").style.color=this.weekdaystextcolor:["weekdaysbackgroundcolor"].includes(e)?this.shadowRoot.querySelector(".weekday-container").style.background=this.weekdaysbackgroundcolor:["dayscolor"].includes(e)?this.shadowRoot.querySelector(".body").style.color=this.dayscolor:["daysbackgroundcolor"].includes(e)?this.shadowRoot.querySelector(".body").style.background=this.daysbackgroundcolor:["bubblecolor","bubblesecondarycolor","bubbletextcolor","highlighteddaycolor","currentDate","arrowLeft","arrowRight"].includes(e)&&(this.updateBubbles(),this.getst())})}updateBubbles(){const t=this.shadowRoot.querySelectorAll(".bubble");this.bubblesecondarycolor?t.forEach(t=>{t.style.background=`linear-gradient(135deg, ${this.bubblecolor} 10%, ${this.bubblesecondarycolor} 100%)`}):t.forEach(t=>{t.style.background=this.bubblecolor}),t.forEach(t=>{t.style.color=this.bubbletextcolor})}getst(){return this._st=r`<style>.arrow:after{content:'${this.arrowRight}'}.rotated:after{content:'${this.arrowLeft}'}.bubble:before{border-color:transparent;border-left-color:${this.bubblecolor}}.highlighted{background:${this.highlighteddaycolor}}</style>`,this._st}getWeekdays(){const t=[],e=[];for(let e=0;e<7;e+=1)t.push({index:this._currentDate.getDay(),day:this._currentDate.toLocaleString(window.navigator.language,{weekday:this.weekdaysvalues})}),this._currentDate.setDate(this._currentDate.getDate()+1);this._currentDate.setDate(this._currentDate.getDate()-7),t.sort((t,e)=>t.index>e.index?1:-1),t.forEach(t=>e.push(t.day));for(let t=0;t<this.weekstart;t+=1)e.push(e.shift());return e}getMonth(){const t=this._currentDate.toLocaleString(window.navigator.language,{month:"long"});return t.charAt(0).toUpperCase()+t.slice(1)}getMonthFirstWeekDay(){return new Date(this._currentDate.getFullYear(),this._currentDate.getMonth(),1).getDay()}getMonthLastDay(){return new Date(this._currentDate.getFullYear(),this._currentDate.getMonth()+1,0).getDate()}getPreviousMonthLastDay(){return new Date(this._currentDate.getFullYear(),this._currentDate.getMonth(),0).getDate()}getBody(){const t=[],e=this.getPreviousMonthLastDay(),a=this.getMonthLastDay(),o=(this.getMonthFirstWeekDay()-this.weekstart+7)%7;let i;for(let a=0;a<o;a+=1){const s=e+a-o+1;i=this.highlightedDayBefore(s),t.push(r`<div class="daybox"><div class="day transparency ${i?"highlighted":""}"><div class="text">${s}${i?r`<input type="button" class="button"><div class="bubble"><div class="bubble-text">${i.text}</div></div>`:r``}</div></div></div>`)}for(let e=1;e<=a;e+=1)i=this.highlightedDay(e),t.push(r`<div class="daybox"><div class="day ${i?"highlighted":""}"><div class="text">${e} ${i?r`<input type="button" class="button"><div class="bubble"><div class="bubble-text">${i.text}</div></div>`:r``}</div></div></div>`);const s=7-t.length%7;if(7!==s)for(let e=1;e<=s;e+=1)i=this.highlightedDayAfter(e),t.push(r`<div class="daybox"><div class="day transparency ${i?"highlighted":""}"><div class="text">${e}${i?r`<input type="button" class="button"><div class="bubble"><div class="bubble-text">${i.text}</div></div>`:r``}</div></div></div>`);return t}changeMonth(t){this._currentDate=new Date(this._currentDate.setMonth(this._currentDate.getMonth()+parseInt(t.currentTarget.getAttribute("data-slide"),10)))}highlightedDay(t){const e=new Date(this._currentDate);return e.setDate(t),e.setHours(0,0,0,0),this.dates.find(t=>new Date(t.date).valueOf()===e.valueOf())}highlightedDayBefore(t){const e=new Date(this._currentDate);return e.setMonth(this._currentDate.getMonth()-1),e.setDate(t),e.setHours(0,0,0,0),this.dates.find(t=>new Date(t.date).valueOf()===e.valueOf())}highlightedDayAfter(t){const e=new Date(this._currentDate);return e.setMonth(this._currentDate.getMonth()+1),e.setDate(t),e.setHours(0,0,0,0),this.dates.find(t=>new Date(t.date).valueOf()===e.valueOf())}});
//# sourceMappingURL=pandora-calendar.js.map
